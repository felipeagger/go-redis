version: '3'
services:

  redis:
    image: redis:latest
    container_name: redis
    #command: redis-server --requirepass mypassword
    ports:
      - 6379:6379

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  redis-insights:
    container_name: redis-insights
    image: redislabs/redisinsight
    ports: 
      - "8082:8001"

  rediscluster:
    image: grokzen/redis-cluster:latest
    container_name: rediscluster
    restart: unless-stopped
    ports:
      - "7000-7005:7000-7005"
    environment:
      IP: 0.0.0.0
    
  



  redis-cluster:
    image: redis:latest
    container_name: redis-cluster
    command:
      - "redis-server"
      - "--cluster-enabled yes"
      - "--cluster-config-file nodes.conf"
      - "--cluster-node-timeout 5000"
      - "--appendonly yes"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    ports:
      - 6380:6379


  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
      environment:
        - ES_JAVA_OPTS=-Xms512m -Xmx512m
      ports:
        - 9200:9200
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9200"]
        interval: 10s
        timeout: 5s
        retries: 3
  kibana:
      image: docker.elastic.co/kibana/kibana:6.3.0
      ports:
        - 5601:5601
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5601"]
        interval: 10s
        timeout: 5s
        retries: 3
      depends_on:
        ["elasticsearch"]
    apm-server:
      image: docker.elastic.co/apm/apm-server:6.3.0
      ports:
        - 8200:8200
      depends_on:
        ["elasticsearch", "kibana"]